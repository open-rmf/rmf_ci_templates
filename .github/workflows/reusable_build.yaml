name: reusable_build
on:
  workflow_call:
    inputs:
      mixin:
        type: string
        required: false
        default: build
      packages:
        description: package names to build
        required: true
        type: string
      dist-matrix:
        description: dist matrix to build
        required: false
        type: string
        default: |
          [{"ros_distribution": "humble",
            "ubuntu_distribution": "jammy"},
          {"ros_distribution": "iron",
            "ubuntu_distribution": "jammy"},
          {"ros_distribution": "rolling",
            "ubuntu_distribution": "noble"}]
defaults:
  run:
    shell: bash
concurrency:
  group: ${{ github.head_ref || github.ref_name }}-${{inputs.mixin}}
  cancel-in-progress: true
jobs:
  build_and_test:
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(inputs.dist-matrix) }}
    name: Build and test
    runs-on: ubuntu-latest
    container:
      # TODO: check if "desktop" is really needed for the builds or tests
      # TODO(luca): Restore to this image once rolling-desktop-full is migrated to noble
      # image: osrf/ros:${{ matrix.ros_distribution }}-desktop-${{ matrix.ubuntu_distribution }}
      image: ros:${{ matrix.ros_distribution }}
    steps:
      - name: Setup ROS
        uses: ros-tooling/setup-ros@v0.7
      - name: install_clang_and_tools
        run: sudo apt update && sudo apt install -y ccache clang clang-tools lld wget python3-pip python3-colcon-coveragepy-result python3-colcon-lcov-result lcov
      - name: create_blacklist
        run: |
          mkdir -p ${{ github.workspace }}/
          touch ${{ github.workspace }}/blacklist.txt
          if [[ ${{ inputs.mixin }} == "asan" ]]; then
            echo "fun:*Eigen*" >  ${{ github.workspace }}/blacklist.txt
          fi
      - name: set mixins
        id: set_mixins
        run: |
          case ${{ inputs.mixin }} in
            asan)
                echo 'colcon_defaults={"build":{"mixin":["asan-gcc","lld"],"cmake-args":["-DCMAKE_BUILD_TYPE=Debug"],"executor":"sequential"}}' >> $GITHUB_OUTPUT
                ;;
            tsan)
                echo 'colcon_defaults={"build":{"mixin":["tsan"],"cmake-args":["-DCMAKE_BUILD_TYPE=Debug"]}}' >> $GITHUB_OUTPUT
                ;;
            *)
                echo 'colcon_defaults={"build": {"mixin": ["ccache", "coverage-gcc", "lld"]}}' >> $GITHUB_OUTPUT
                ;;
          esac
      - uses: actions/cache@v3
        with:
          path: ~/.cache/ccache
          key: ccache
      - name: build_and_test
        uses: ros-tooling/action-ros-ci@v0.3
        env:
          LANG: en_US.UTF-8
          CC: clang -fsanitize-blacklist=${{ github.workspace }}/blacklist.txt
          CXX: clang++ -fsanitize-blacklist=${{ github.workspace }}/blacklist.txt
          QT_QPA_PLATFORM: offscreen
          # We have some new_delete_type_mismatch errors that looks like to come from rclcpp
          ASAN_OPTIONS: detect_leaks=0:new_delete_type_mismatch=0
        with:
          target-ros2-distro: ${{ matrix.ros_distribution }}
          # build all packages listed in the meta package
          package-name: ${{ inputs.packages }}
          vcs-repo-file-url: |
            https://raw.githubusercontent.com/open-rmf/rmf/${{ matrix.ros_distribution }}/rmf.repos
          colcon-defaults: ${{ steps.set_mixins.outputs.colcon_defaults }}
          colcon-mixin-repository: https://raw.githubusercontent.com/colcon/colcon-mixin-repository/master/index.yaml
      - name: Upload colcon build logs
        uses: actions/upload-artifact@v2
        with:
          name: colcon-build-logs
          path: ${{ steps.build_and_test.outputs.ros-workspace-directory-name }}/log
      - name: Upload colcon failed test results
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: test-results_${{ matrix.ubuntu_distribution }}_${{ matrix.ros_distribution }}
          path: ros_ws/build/*/test_results/*/*.xml
      - name: Upload asan test logs
        if:  ${{ inputs.mixin }} == "asan"
        uses: actions/upload-artifact@v2
        with:
          name: colcon-asan-logs
          path: ${{ steps.build_and_test.outputs.ros-workspace-directory-name }}/log
      - name: Upload tsan test logs
        if: ${{ inputs.mixin }} == "tsan"
        uses: actions/upload-artifact@v2
        with:
          name: colcon-tsan-logs
          path: ${{ steps.build_and_test.outputs.ros-workspace-directory-name }}/log
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          files: ros_ws/lcov/total_coverage.info
          flags: tests
          name: lean_and_mean_codecov_bot
